#pragma once

// Вспомогательная функция.
// Возводит двойку в степень "аргумент" и возвращает результат как целое число.
// Некорректна на отрицательных степенях.
int positiveExponentOfTwo(int exponent);

// Функция генерации допольнительного двоичного кода для двоичного числа с NUMBER_OF_DIGITS разрядами.
// На вход принимает указатель на двоичное число и указатель на массив-число, в который нужно положить результат.
void createAdditionalCode(int* binarySubtrahend, int* binaryResult);

// Функция генерации двоичного представленмя числа по десятичному.
// Записывает сгенерированное двоичное число в указанный в аргументах функции массив cлева направо.
void generateBinary(int decimal, int* arrayForBinary);

// Функция, которая строит десятичное число по данному двоичному.
// На вход принимает массив с двоичным числом и переменную, куда нужно положить десятичный результат.
//
// Важно: функция корректно работает только для чисел от -(2**(NUMBER_OF_DIGITS - 1) - 1) до 2**(NUMBER_OF_DIGITS - 1) в дополнительном двоичном коде.
// Она вызывается в программе всего один раз, от результата функции addBinary, которая, в свою очередь, никак не может выдать неподходящее число.
void generateDecimal(int* binary, int* variableForDecimal);

// Функция побитового сложения чисел в дополнительном двоичном коде.
// На вход принимает три указателя на массивы: первое и второе двоичное слагаемое и массив для результата.
// Если в процессе сложения возникает "лишний" бит переноса - он никак не учитывается. Это должно учитываться ДО передачи чисел в функцию.
// Конкретно в этой программе это контролирует функция для пользовательского ввода.
void addBinary(int* firstSummand, int* secondSummand, int* binaryResult);

